/**\n * Test script for CLIX dual pricing functionality\n * Tests both USD and XLM price fetching from Stellar Horizon API\n */\n\nconst testDualPricing = async () => {\n  console.log('🧪 Testing CLIX Dual Pricing Implementation...');\n  console.log('=' .repeat(50));\n  \n  try {\n    // Import our dual pricing hook (simulate the environment)\n    const stellarHorizonService = require('./src/services/StellarHorizonService.js').default;\n    \n    // Configure CLIX token\n    stellarHorizonService.setClixTokenConfig(\n      'CLIX',\n      'GBCJSKXTZX5CYKJGBGQPYEATLSGR4EPRUOL7EKIDCDOZ4UC67BBQRCSO'\n    );\n    \n    console.log('\\n1️⃣ Testing Dual Price Fetch...');\n    const dualResult = await stellarHorizonService.fetchDualPrice();\n    \n    console.log('\\n📊 Dual Pricing Results:');\n    console.log(`  💰 USD Price: ${dualResult.usdPrice || 'N/A'}`);\n    console.log(`  💫 XLM Price: ${dualResult.xlmPrice || 'N/A'}`);\n    console.log(`  📍 Source: ${dualResult.source || 'N/A'}`);\n    console.log(`  ✅ Success: ${dualResult.success}`);\n    \n    console.log('\\n2️⃣ Testing Legacy Compatibility...');\n    const legacyResult = await stellarHorizonService.fetchRecentTrades();\n    \n    console.log('\\n📊 Legacy Results:');\n    console.log(`  💰 Price: ${legacyResult.price || 'N/A'}`);\n    console.log(`  💫 XLM Price: ${legacyResult.xlmPrice || 'N/A'}`);\n    console.log(`  📍 Source: ${legacyResult.source || 'N/A'}`);\n    console.log(`  ✅ Success: ${legacyResult.success}`);\n    \n    console.log('\\n3️⃣ Health Check...');\n    const healthCheck = await stellarHorizonService.healthCheck();\n    console.log(`  🏥 Horizon API Health: ${healthCheck ? '✅ Healthy' : '❌ Unhealthy'}`);\n    \n    console.log('\\n🎉 Test Complete!');\n    console.log('=' .repeat(50));\n    \n    if (dualResult.success || legacyResult.success) {\n      console.log('✅ DUAL PRICING IMPLEMENTATION WORKING!');\n    } else {\n      console.log('⚠️  No live price data found (expected if no orders in order book)');\n    }\n    \n  } catch (error) {\n    console.error('❌ Test failed:', error.message);\n  }\n};\n\n// Run the test\nif (require.main === module) {\n  testDualPricing();\n}\n\nmodule.exports = { testDualPricing };\n